<div id='chat-pod'>

<div class='container'>
  <div class='row'>
    <div class='col-md-4 col-md-offset-4 chat-container'>
      <div id='avatars'>
        <% @pod.users.each do |user| %>
          <%= image_tag user.avatar %>
        <% end %>
      </div>
      <div id='messages'>
        <!--
        <% @pod.messages.each do |m| %>
          <p>
          <span class='name'><%= m.user.name %></span>
          <span class='body'><%= m.text_body %></span>
          </p>
        <% end %>
        -->
      </div>

      <form id='message-form' role='role'>
        <div class='form-group'>
          <input type='text' class='form-control' id='message-body' placeholder='Message body'/>
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
      </form>
    </div>
  </div>
</div>

</div>

<script>

(function() {
  <% url = root_url.gsub(/https?:\/\//, "") %>
  var dispatcher = new WebSocketRails('<%= url %>/websocket');

  dispatcher.on_open = function(data) {
    console.log('Connection has been established: ', data);
    // You can trigger new server events inside this callback if you wish.
  }

  <% data = @pod.messages.reduce([]) do |array, m|
    array << {
      name: m.user.name,
      text_body: m.text_body
    }
  end

  %>
  var message_data = <%= data.to_json.html_safe %>;

  $(document).ready(function() {
    for (var i = 0; i < message_data.length; i++) {
      addMessage(message_data[i]);
    }
    setTimeout(function() {
      $messages.animate({scrollTop: 10000});
    }, 0)
  })

  var channel = dispatcher.subscribe_private('pod_<%= @pod.id %>');
  channel.on_success = function(resp) {
    console.log('channel', resp);
  };

  var $messages = $('#messages');

  // listen on the channel
  channel.bind('messages.created', function(data) {
    addMessage(data);
  });

  // send on the event router
  $form = $('#message-form');
  $input = $form.find('#message-body');

  $form.submit(function(evt) {
    evt.preventDefault();

    var data = {
      pod_id: <%= @pod.id %>,
      text_body: $input.val(),
      name: '<%= current_user.name %>',
    }

    dispatcher.trigger('messages.create', data, function(response) {
      console.log('success', response);
    }, function(response) {
      console.log('fail', response);
    });

    $input.val('');
    $messages.animate({scrollTop: 10000});


    //channel.trigger('messages.created', data);
  })

  function getColor(name) {
    var sum = 0;
    for (var i = 0; i < name.length - 1; i++) {
      sum += name.charCodeAt(i);
    }

    var h = sum % 16 * 16, s = 78 + name.length % 20 - 10, b = 30 + name.length % 10 - 5;
    var color = tinycolor({h: h, s: s, l: b});
    return color.toHexString();

  }

  function addMessage(data) {
    var color = getColor(data.name);
    $messages.append(
        "<p>"
        + "<span class='name' style='color:" + color + ";'>" + data.name + "</span>"
        + "<span class='body'>" + data.text_body + "</span>"
        + "</p>"
        );
  }

}());
</script>
